diff -Nur sdcv-0.4.2.old/doc/sdcv.1 sdcv-0.4.2/doc/sdcv.1
--- sdcv-0.4.2.old/doc/sdcv.1	2006-04-24 15:54:13.000000000 +0800
+++ sdcv-0.4.2/doc/sdcv.1	2009-07-09 21:35:16.720218410 +0800
@@ -51,7 +51,7 @@
 .TP 
 /usr/share/stardict/dic 
 .TP
-$(HOME)/.stardict/dic
+$(HOME)/.config/sdcv/dic
 
 Place, where sdcv expect to find dictionaries.
 Instead of /usr/share/stardict/dic you can use everything
@@ -59,7 +59,7 @@
 For example, if you have dictionaries in /mnt/data/stardict-dicts/dic,
 set STARDICT_DATA_DIR to /mnt/data/stardict-dicts.
 .TP
-$(HOME)/.sdcv_history
+$(HOME)/config/sdcv/.sdcv_history
 
 This file include last  $(SDCV_HISTSIZE) words, which you seek with sdcv. 
 SDCV use this file only if it was compiled with readline library support.
diff -Nur sdcv-0.4.2.old/src/lib/lib.cpp sdcv-0.4.2/src/lib/lib.cpp
--- sdcv-0.4.2.old/src/lib/lib.cpp	2006-04-24 16:17:27.000000000 +0800
+++ sdcv-0.4.2/src/lib/lib.cpp	2009-07-09 21:34:01.683219967 +0800
@@ -496,9 +496,13 @@
 		entries[i].keystr=p;
 		len=strlen(p);
 		p+=len+1;
-		entries[i].off=g_ntohl(*reinterpret_cast<guint32 *>(p));
+        /*
+         * Can not use typecasting here, because *data does not have
+         * to be alligned and unalligned access fails on some architectures.
+         */
+		entries[i].off=((unsigned char)p[0] << 24) | ((unsigned char)p[1] << 16) | ((unsigned char)p[2] << 8) | (unsigned char)p[3];
 		p+=sizeof(guint32);
-		entries[i].size=g_ntohl(*reinterpret_cast<guint32 *>(p));
+		entries[i].size=((unsigned char)p[0] << 24) | ((unsigned char)p[1] << 16) | ((unsigned char)p[2] << 8) | (unsigned char)p[3];
 		p+=sizeof(guint32);
 	}
 }
@@ -513,7 +517,7 @@
 {
 	fseek(idxfile, wordoffset[page_idx], SEEK_SET);
 	guint32 page_size=wordoffset[page_idx+1]-wordoffset[page_idx];
-	fread(wordentry_buf, std::min(sizeof(wordentry_buf), page_size), 1, idxfile); //TODO: check returned values, deal with word entry that strlen>255.
+	fread(wordentry_buf, std::min(sizeof(wordentry_buf), (size_t)page_size), 1, idxfile); //TODO: check returned values, deal with word entry that strlen>255.
 	return wordentry_buf;
 }
 
@@ -559,11 +563,11 @@
 {
 	strlist_t res;
 	res.push_back(url+".oft");
-	if (!g_file_test(g_get_user_cache_dir(), G_FILE_TEST_EXISTS) &&
-	    g_mkdir(g_get_user_cache_dir(), 0700)==-1)
+	if (!g_file_test(g_get_user_config_dir(), G_FILE_TEST_EXISTS) &&
+	    g_mkdir(g_get_user_config_dir(), 0700)==-1)
 		return res;
 
-	std::string cache_dir=std::string(g_get_user_cache_dir())+G_DIR_SEPARATOR_S+"sdcv";
+	std::string cache_dir=std::string(g_get_user_config_dir())+G_DIR_SEPARATOR_S+"sdcv";
 
 	if (!g_file_test(cache_dir.c_str(), G_FILE_TEST_EXISTS)) {
 		if (g_mkdir(cache_dir.c_str(), 0700)==-1)
diff -Nur sdcv-0.4.2.old/src/libwrapper.cpp sdcv-0.4.2/src/libwrapper.cpp
--- sdcv-0.4.2.old/src/libwrapper.cpp	2006-04-24 18:40:29.000000000 +0800
+++ sdcv-0.4.2/src/libwrapper.cpp	2009-07-09 21:34:01.684219934 +0800
@@ -24,6 +24,7 @@
 
 #include <glib/gi18n.h>
 #include <map>
+#include <cstring>
 
 #include "utils.hpp"
 
@@ -117,7 +118,6 @@
 		switch (*p++) {
 		case 'm':
 		case 'l': //need more work...
-		case 'g':
 			sec_size = strlen(p);
 			if (sec_size) {
 				res+="\n";
@@ -127,6 +127,7 @@
 			}
 			sec_size++;
 			break;
+		case 'g':
 		case 'x':
 			sec_size = strlen(p);
 			if (sec_size) {
diff -Nur sdcv-0.4.2.old/src/readline.cpp sdcv-0.4.2/src/readline.cpp
--- sdcv-0.4.2.old/src/readline.cpp	2005-12-08 06:07:23.000000000 +0800
+++ sdcv-0.4.2/src/readline.cpp	2009-07-09 21:34:01.684219934 +0800
@@ -23,6 +23,7 @@
 #endif
 
 #include <cstdio>
+#include <cstdlib>
 #ifdef WITH_READLINE
 #  include <readline/readline.h>
 #  include <readline/history.h>
@@ -50,12 +51,12 @@
 	real_readline()
 	{
 		using_history();
-		string histname=(string(g_get_home_dir())+G_DIR_SEPARATOR+".sdcv_history");
+		string histname=(string(g_get_user_config_dir())+G_DIR_SEPARATOR+"sdcv"+G_DIR_SEPARATOR+"sdcv_history");
 		read_history(histname.c_str());;
 	}
 	~real_readline() 
 	{
-		string histname=(string(g_get_home_dir())+G_DIR_SEPARATOR+".sdcv_history");
+		string histname=(string(g_get_user_config_dir())+G_DIR_SEPARATOR+"sdcv"+G_DIR_SEPARATOR+"sdcv_history");
 		write_history(histname.c_str());
 		const gchar *hist_size_str=g_getenv("SDCV_HISTSIZE");
 		int hist_size;
diff -Nur sdcv-0.4.2.old/src/sdcv.cpp sdcv-0.4.2/src/sdcv.cpp
--- sdcv-0.4.2.old/src/sdcv.cpp	2006-04-24 18:20:10.000000000 +0800
+++ sdcv-0.4.2/src/sdcv.cpp	2009-07-09 21:34:01.685220355 +0800
@@ -161,8 +161,12 @@
 
 	strlist_t dicts_dir_list;
 
-	dicts_dir_list.push_back(std::string(g_get_home_dir())+G_DIR_SEPARATOR+
-				 ".stardict"+G_DIR_SEPARATOR+"dic");
+	const char *homedir = g_getenv ("XDG_CONFIG_HOME");
+	if (!homedir)
+		homedir = g_get_user_config_dir ();
+
+	dicts_dir_list.push_back(std::string(homedir)+G_DIR_SEPARATOR+
+				 "sdcv"+G_DIR_SEPARATOR+"dic");
 	dicts_dir_list.push_back(data_dir);   
 
 	if (show_list_dicts) {
@@ -186,7 +190,7 @@
 	}
 
     
-	string conf_dir = string(g_get_home_dir())+G_DIR_SEPARATOR+".stardict";
+	string conf_dir = string(g_get_user_config_dir())+G_DIR_SEPARATOR+"sdcv";
 	if (g_mkdir(conf_dir.c_str(), S_IRWXU)==-1 && errno!=EEXIST)
 		fprintf(stderr, _("g_mkdir failed: %s\n"), strerror(errno));
 
diff -Nur sdcv-0.4.2.old/src/utils.cpp sdcv-0.4.2/src/utils.cpp
--- sdcv-0.4.2.old/src/utils.cpp	2006-04-24 17:03:47.000000000 +0800
+++ sdcv-0.4.2/src/utils.cpp	2009-07-09 21:34:01.686220227 +0800
@@ -22,6 +22,8 @@
 #  include "config.h"
 #endif
 
+#include <cstdio>
+#include <cstdlib>
 #include <glib.h>
 #include <glib/gi18n.h>
 
